pub mod iterative;

pub trait Solution {
    fn rotated_digits(n: i32) -> i32;
}

#[cfg(test)]
mod tests {
    use super::Solution;

    pub fn run<S: Solution>() {
        let test_cases = [
            (1, 0),
            (2, 1),
            (3, 1),
            (4, 1),
            (5, 2),
            (6, 3),
            (7, 3),
            (8, 3),
            (9, 4),
            (10, 4),
            (11, 4),
            (12, 5),
            (13, 5),
            (14, 5),
            (15, 6),
            (16, 7),
            (17, 7),
            (18, 7),
            (19, 8),
            (20, 9),
            (21, 10),
            (22, 11),
            (23, 11),
            (24, 11),
            (25, 12),
            (26, 13),
            (27, 13),
            (28, 14),
            (29, 15),
            (30, 15),
            (31, 15),
            (32, 15),
            (33, 15),
            (34, 15),
            (35, 15),
            (36, 15),
            (37, 15),
            (38, 15),
            (39, 15),
            (40, 15),
            (41, 15),
            (42, 15),
            (43, 15),
            (44, 15),
            (45, 15),
            (46, 15),
            (47, 15),
            (48, 15),
            (49, 15),
            (50, 16),
            (51, 17),
            (52, 18),
            (53, 18),
            (54, 18),
            (55, 19),
            (56, 20),
            (57, 20),
            (58, 21),
            (59, 22),
            (60, 23),
            (61, 24),
            (62, 25),
            (63, 25),
            (64, 25),
            (65, 26),
            (66, 27),
            (67, 27),
            (68, 28),
            (69, 29),
            (70, 29),
            (71, 29),
            (72, 29),
            (73, 29),
            (74, 29),
            (75, 29),
            (76, 29),
            (77, 29),
            (78, 29),
            (79, 29),
            (80, 29),
            (81, 29),
            (82, 30),
            (83, 30),
            (84, 30),
            (85, 31),
            (86, 32),
            (87, 32),
            (88, 32),
            (89, 33),
            (90, 34),
            (91, 35),
            (92, 36),
            (93, 36),
            (94, 36),
            (95, 37),
        ];

        for (n, expected) in test_cases {
            assert_eq!(S::rotated_digits(n), expected);
        }
    }
}
