pub mod binary_search;

pub trait Solution {
    fn min_absolute_sum_diff(nums1: Vec<i32>, nums2: Vec<i32>) -> i32;
}

#[cfg(test)]
mod tests {
    use super::Solution;

    pub fn run<S: Solution>() {
        let test_cases = [
            ((&[1, 7, 5] as &[_], &[2, 3, 5] as &[_]), 3),
            ((&[2, 4, 6, 8, 10], &[2, 4, 6, 8, 10]), 0),
            ((&[1, 10, 4, 4, 2, 7], &[9, 3, 5, 1, 7, 4]), 20),
            (
                (
                    &[
                        56, 51, 39, 1, 12, 14, 58, 82, 18, 41, 70, 64, 18, 7, 44, 90, 55, 23, 11, 79, 59, 76, 67, 92,
                        60, 80, 57, 11, 66, 32, 76, 73, 35, 65, 55, 37, 38, 26, 4, 7, 64, 84, 98, 61, 78, 1, 80, 33, 5,
                        66, 32, 30, 52, 29, 41, 2, 21, 83, 30, 35, 21, 30, 13, 26, 36, 93, 81, 41, 98, 23, 20, 19, 45,
                        52, 25, 51, 52, 24, 2, 45, 21, 97, 11, 92, 28, 37, 58, 29, 5, 18, 98, 94, 86, 65, 88, 8, 75,
                        12, 9, 66,
                    ],
                    &[
                        64, 32, 98, 65, 67, 40, 71, 93, 74, 24, 49, 80, 98, 35, 86, 52, 99, 65, 15, 92, 83, 84, 80, 71,
                        46, 11, 26, 70, 80, 2, 81, 57, 97, 12, 68, 10, 49, 80, 24, 18, 45, 72, 33, 94, 60, 5, 94, 99,
                        14, 41, 25, 83, 77, 67, 49, 70, 94, 83, 55, 17, 61, 44, 50, 62, 3, 36, 67, 10, 2, 39, 53, 62,
                        44, 72, 66, 7, 3, 6, 80, 38, 43, 100, 17, 25, 24, 78, 8, 4, 36, 86, 9, 68, 99, 64, 65, 15, 42,
                        59, 79, 66,
                    ],
                ),
                3029,
            ),
        ];

        for ((nums1, nums2), expected) in test_cases {
            assert_eq!(S::min_absolute_sum_diff(nums1.to_vec(), nums2.to_vec()), expected);
        }
    }
}
