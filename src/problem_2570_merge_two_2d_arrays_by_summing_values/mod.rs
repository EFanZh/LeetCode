pub mod iterative;

pub trait Solution {
    fn merge_arrays(nums1: Vec<Vec<i32>>, nums2: Vec<Vec<i32>>) -> Vec<Vec<i32>>;
}

#[cfg(test)]
mod tests {
    use super::Solution;

    type TestCase<'a> = ((&'a [[i32; 2]], &'a [[i32; 2]]), &'a [[i32; 2]]);

    const EXTRA_TEST_CASE: TestCase = (
        (
            &[
                [148, 597],
                [165, 623],
                [306, 359],
                [349, 566],
                [403, 646],
                [420, 381],
                [566, 543],
                [730, 209],
                [757, 875],
                [788, 208],
                [932, 695],
            ],
            &[
                [74, 669],
                [87, 399],
                [89, 165],
                [99, 749],
                [122, 401],
                [138, 16],
                [144, 714],
                [148, 206],
                [177, 948],
                [211, 653],
                [285, 775],
                [309, 289],
                [349, 396],
                [386, 831],
                [403, 318],
                [405, 119],
                [420, 153],
                [468, 433],
                [504, 101],
                [566, 128],
                [603, 688],
                [618, 628],
                [622, 586],
                [641, 46],
                [653, 922],
                [672, 772],
                [691, 823],
                [693, 900],
                [756, 878],
                [757, 952],
                [770, 795],
                [806, 118],
                [813, 88],
                [919, 501],
                [935, 253],
                [982, 385],
            ],
        ),
        &[
            [74, 669],
            [87, 399],
            [89, 165],
            [99, 749],
            [122, 401],
            [138, 16],
            [144, 714],
            [148, 803],
            [165, 623],
            [177, 948],
            [211, 653],
            [285, 775],
            [306, 359],
            [309, 289],
            [349, 962],
            [386, 831],
            [403, 964],
            [405, 119],
            [420, 534],
            [468, 433],
            [504, 101],
            [566, 671],
            [603, 688],
            [618, 628],
            [622, 586],
            [641, 46],
            [653, 922],
            [672, 772],
            [691, 823],
            [693, 900],
            [730, 209],
            [756, 878],
            [757, 1827],
            [770, 795],
            [788, 208],
            [806, 118],
            [813, 88],
            [919, 501],
            [932, 695],
            [935, 253],
            [982, 385],
        ],
    );

    pub fn run<S: Solution>() {
        let test_cases = [
            (
                (&[[1, 2], [2, 3], [4, 5]] as &[_], &[[1, 4], [3, 2], [4, 1]] as &[_]),
                &[[1, 6], [2, 3], [3, 2], [4, 6]] as &[_],
            ),
            (
                (&[[2, 4], [3, 6], [5, 5]], &[[1, 3], [4, 3]]),
                &[[1, 3], [2, 4], [3, 6], [4, 3], [5, 5]],
            ),
            EXTRA_TEST_CASE,
        ];

        for ((nums1, nums2), expected) in test_cases {
            assert_eq!(
                S::merge_arrays(
                    nums1.iter().map(Vec::from).collect(),
                    nums2.iter().map(Vec::from).collect(),
                ),
                expected,
            );
        }
    }
}
