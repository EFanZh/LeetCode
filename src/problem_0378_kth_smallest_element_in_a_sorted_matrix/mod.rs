pub mod bfs;
pub mod bfs_2;
pub mod binary_search;
pub mod binary_search_2;
pub mod binary_search_3;
pub mod divide_and_conquer;

pub trait Solution {
    fn kth_smallest(matrix: Vec<Vec<i32>>, k: i32) -> i32;
}

#[cfg(test)]
mod tests {
    use super::Solution;

    type TestCase<'a> = ((&'a [&'a [i32]], i32), i32);

    const TEST_CASES: [TestCase; 25] = [
        ((&[&[1, 5, 9], &[10, 11, 13], &[12, 13, 15]], 1), 1),
        ((&[&[1, 5, 9], &[10, 11, 13], &[12, 13, 15]], 2), 5),
        ((&[&[1, 5, 9], &[10, 11, 13], &[12, 13, 15]], 3), 9),
        ((&[&[1, 5, 9], &[10, 11, 13], &[12, 13, 15]], 4), 10),
        ((&[&[1, 5, 9], &[10, 11, 13], &[12, 13, 15]], 5), 11),
        ((&[&[1, 5, 9], &[10, 11, 13], &[12, 13, 15]], 6), 12),
        ((&[&[1, 5, 9], &[10, 11, 13], &[12, 13, 15]], 7), 13),
        ((&[&[1, 5, 9], &[10, 11, 13], &[12, 13, 15]], 8), 13),
        ((&[&[1, 5, 9], &[10, 11, 13], &[12, 13, 15]], 9), 15),
        (
            (
                &[
                    &[1, 4, 7, 11, 15],
                    &[2, 5, 8, 12, 19],
                    &[3, 6, 9, 16, 22],
                    &[10, 13, 14, 17, 24],
                    &[18, 21, 23, 26, 30],
                ],
                5,
            ),
            5,
        ),
        (
            (
                &[
                    &[1, 1, 3, 8, 13],
                    &[4, 4, 4, 8, 18],
                    &[9, 14, 18, 19, 20],
                    &[14, 19, 23, 25, 25],
                    &[18, 21, 26, 28, 29],
                ],
                13,
            ),
            18,
        ),
        ((&[&[-5]], 1), -5),
        ((&[&[2, 3], &[5, 7]], 1), 2),
        ((&[&[2, 3], &[5, 7]], 2), 3),
        ((&[&[2, 3], &[5, 7]], 3), 5),
        ((&[&[2, 3], &[5, 7]], 4), 7),
        (
            (
                &[
                    &[1, 3, 5, 7, 9],
                    &[2, 4, 6, 8, 10],
                    &[11, 13, 15, 17, 19],
                    &[12, 14, 16, 18, 20],
                    &[21, 22, 23, 24, 25],
                ],
                24,
            ),
            24,
        ),
        (
            (
                &[&[1, 2, 3, 7], &[5, 10, 14, 16], &[8, 10, 18, 19], &[9, 12, 22, 24]],
                14,
            ),
            19,
        ),
        (
            (
                &[
                    &[1, 6, 6, 9, 14, 14, 17],
                    &[5, 8, 9, 9, 14, 17, 18],
                    &[5, 10, 11, 12, 18, 18, 20],
                    &[5, 15, 16, 16, 20, 23, 27],
                    &[7, 15, 19, 21, 22, 24, 31],
                    &[12, 16, 22, 22, 24, 25, 34],
                    &[16, 21, 23, 26, 26, 30, 37],
                ],
                45,
            ),
            27,
        ),
        (
            (
                &[
                    &[1, 4, 7, 11, 15],
                    &[2, 5, 8, 12, 19],
                    &[3, 6, 9, 16, 22],
                    &[10, 13, 14, 17, 24],
                    &[18, 21, 23, 26, 30],
                ],
                20,
            ),
            21,
        ),
        ((&[&[1, 3, 5], &[6, 7, 12], &[11, 14, 14]], 9), 14),
        (
            (
                &[
                    &[0, 0, 0, 0, 0],
                    &[1, 1, 1, 1, 1],
                    &[2, 3, 3, 3, 4],
                    &[3, 4, 4, 4, 4],
                    &[4, 4, 4, 4, 4],
                ],
                12,
            ),
            3,
        ),
        (
            (
                &[
                    &[2, 3, 6, 6, 10],
                    &[5, 9, 12, 17, 19],
                    &[10, 14, 17, 20, 20],
                    &[15, 17, 20, 24, 24],
                    &[20, 20, 25, 26, 29],
                ],
                4,
            ),
            6,
        ),
        (
            (
                &[
                    &[4, 7, 11, 12, 16, 21, 23, 26],
                    &[5, 12, 17, 17, 18, 23, 26, 31],
                    &[8, 15, 21, 25, 26, 29, 33, 34],
                    &[13, 20, 26, 26, 29, 34, 39, 40],
                    &[18, 21, 31, 36, 41, 42, 42, 44],
                    &[19, 23, 31, 39, 46, 49, 50, 53],
                    &[23, 25, 33, 40, 50, 51, 55, 60],
                    &[27, 28, 33, 44, 51, 56, 61, 65],
                ],
                56,
            ),
            50,
        ),
        ((&[&[1, 3, 4], &[1, 8, 8], &[4, 12, 17]], 5), 4),
    ];

    pub fn run<S: Solution>() {
        for ((matrix, k), expected) in TEST_CASES {
            assert_eq!(
                S::kth_smallest(matrix.iter().copied().map(<[_]>::to_vec).collect(), k),
                expected
            );
        }
    }
}
