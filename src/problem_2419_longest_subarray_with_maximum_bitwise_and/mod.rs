pub mod iterative;

pub trait Solution {
    fn longest_subarray(nums: Vec<i32>) -> i32;
}

#[cfg(test)]
mod tests {
    use super::Solution;

    pub fn run<S: Solution>() {
        let test_cases = [
            (&[1, 2, 3, 3, 2, 2] as &[_], 2),
            (&[1, 2, 3, 4], 1),
            (
                &[
                    586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730,
                    586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730,
                    586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730,
                    586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730,
                    586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730,
                    586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730,
                    586_730, 586_730, 586_730, 516_529, 516_529, 516_529, 516_529, 516_529, 516_529, 516_529, 516_529,
                    516_529, 516_529, 516_529, 516_529, 516_529, 516_529, 516_529, 516_529, 516_529, 516_529, 516_529,
                    516_529, 516_529, 516_529, 516_529, 516_529, 516_529, 516_529, 516_529, 516_529, 516_529, 516_529,
                    55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816,
                    55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816,
                    55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816,
                    55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816,
                    55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816, 55_816,
                    55_816, 55_816, 55_816, 55_816, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730,
                    586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730,
                    586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730,
                    586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730,
                    586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730,
                    586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730,
                    586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730,
                    586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730,
                    586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730,
                    586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730,
                    586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730,
                    586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 586_730, 232_392, 232_392, 294_503,
                ],
                125,
            ),
            (
                &[
                    117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793,
                    117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793,
                    117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793,
                    117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793,
                    117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793,
                    117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 117_793, 109_282, 109_282, 109_282, 109_282,
                    109_282, 109_282, 109_282, 109_282, 109_282, 109_282, 109_282, 109_282, 109_282, 169_349,
                ],
                1,
            ),
        ];

        for (nums, expected) in test_cases {
            assert_eq!(S::longest_subarray(nums.to_vec()), expected);
        }
    }
}
