pub mod mathematical;

pub trait Solution {
    fn minimum_boxes(n: i32) -> i32;
}

#[cfg(test)]
mod tests {
    use super::Solution;

    pub fn run<S: Solution>() {
        // See <https://oeis.org/A123579>.
        let test_cases = [
            (1, 1),
            (2, 2),
            (3, 3),
            (4, 3),
            (5, 4),
            (6, 5),
            (7, 5),
            (8, 6),
            (9, 6),
            (10, 6),
            (11, 7),
            (12, 8),
            (13, 8),
            (14, 9),
            (15, 9),
            (16, 9),
            (17, 10),
            (18, 10),
            (19, 10),
            (20, 10),
            (21, 11),
            (22, 12),
            (23, 12),
            (24, 13),
            (25, 13),
            (26, 13),
            (27, 14),
            (28, 14),
            (29, 14),
            (30, 14),
            (31, 15),
            (32, 15),
            (33, 15),
            (34, 15),
            (35, 15),
            (36, 16),
            (37, 17),
            (38, 17),
            (39, 18),
            (40, 18),
            (41, 18),
            (42, 19),
            (43, 19),
            (44, 19),
            (45, 19),
            (46, 20),
            (47, 20),
            (48, 20),
            (49, 20),
            (50, 20),
            (51, 21),
            (52, 21),
            (53, 21),
            (54, 21),
            (55, 21),
            (56, 21),
            (57, 22),
            (58, 23),
            (59, 23),
            (60, 24),
            (61, 24),
            (62, 24),
            (63, 25),
            (64, 25),
            (65, 25),
            (66, 25),
            (67, 26),
            (68, 26),
            (69, 26),
            (70, 26),
            (71, 26),
            (72, 27),
            (73, 27),
            (74, 27),
        ];

        for (n, expected) in test_cases {
            assert_eq!(S::minimum_boxes(n), expected);
        }
    }
}
