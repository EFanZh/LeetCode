pub mod iterative;

pub trait Solution {
    fn maximum_top(nums: Vec<i32>, k: i32) -> i32;
}

#[cfg(test)]
mod tests {
    use super::Solution;

    pub fn run<S: Solution>() {
        let test_cases = [
            ((&[5, 2, 2, 4, 0, 6] as &[_], 4), 5),
            ((&[2], 1), -1),
            (
                (
                    &[
                        94, 23, 58, 92, 3, 63, 68, 43, 8, 97, 54, 11, 63, 55, 73, 38, 22, 80, 45, 43, 25, 34, 67, 76,
                        80, 9, 30, 27, 50, 7, 57, 63, 63, 27, 46, 1, 50, 55, 99, 92, 73, 9, 57, 25, 59, 54, 100, 56,
                        64, 94, 99,
                    ],
                    79,
                ),
                100,
            ),
            (
                (
                    &[
                        35, 43, 23, 86, 23, 45, 84, 2, 18, 83, 79, 28, 54, 81, 12, 94, 14, 0, 0, 29, 94, 12, 13, 1, 48,
                        85, 22, 95, 24, 5, 73, 10, 96, 97, 72, 41, 52, 1, 91, 3, 20, 22, 41, 98, 70, 20, 52, 48, 91,
                        84, 16, 30, 27, 35, 69, 33, 67, 18, 4, 53, 86, 78, 26, 83, 13, 96, 29, 15, 34, 80, 16, 49,
                    ],
                    15,
                ),
                94,
            ),
            ((&[18], 3), -1),
            ((&[3], 0), 3),
            (
                (
                    &[
                        68, 76, 53, 73, 85, 87, 58, 24, 48, 59, 38, 80, 38, 65, 90, 38, 45, 22, 3, 28, 11,
                    ],
                    1,
                ),
                76,
            ),
        ];

        for ((nums, k), expected) in test_cases {
            assert_eq!(S::maximum_top(nums.to_vec(), k), expected);
        }
    }
}
