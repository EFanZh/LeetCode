pub mod greedy;

pub trait Solution {
    fn min_cost(start_pos: Vec<i32>, home_pos: Vec<i32>, row_costs: Vec<i32>, col_costs: Vec<i32>) -> i32;
}

#[cfg(test)]
mod tests {
    use super::Solution;

    pub fn run<S: Solution>() {
        let test_cases = [
            (([1, 0], [2, 3], &[5, 4, 3] as &[_], &[8, 2, 6, 7] as &[_]), 18),
            (([0, 0], [0, 0], &[5], &[26]), 0),
            (([2, 2], [1, 4], &[1, 0, 21, 18], &[9, 4, 1, 2, 13, 18, 14, 23]), 15),
            (
                (
                    [45, 70],
                    [32, 35],
                    &[
                        4, 10, 5, 8, 0, 10, 5, 9, 10, 2, 7, 7, 7, 6, 1, 1, 5, 1, 5, 9, 7, 1, 0, 3, 1, 2, 6, 4, 6, 4, 2,
                        4, 1, 1, 5, 2, 3, 9, 3, 9, 8, 4, 1, 4, 6, 6728, 8650, 6586, 9762, 9034, 9246, 5033, 9632, 6907,
                        7237, 6422, 5603, 6062, 5033, 5109, 8118, 7210, 9672, 8268, 5157, 5854, 7723, 8101,
                    ],
                    &[
                        7, 8, 9, 8, 10, 3, 10, 4, 8, 10, 7, 5, 5, 9, 7, 5, 7, 10, 8, 6, 2, 2, 4, 10, 7, 3, 6, 2, 1, 8,
                        1, 6, 5, 5, 1, 9, 10, 6, 3, 2, 8, 6, 3, 0, 10, 4, 5, 4, 6, 2, 1, 6, 8, 9, 3, 0, 5, 6, 8, 3, 8,
                        6, 10, 4, 6, 4, 3, 3, 6, 3, 6893, 9916, 9592, 7854, 8030, 6396, 8904, 5191, 9514, 9417, 9701,
                        9840, 9194, 6515, 5643, 7804, 9768, 8898, 6735, 8548, 6859, 6024, 9551, 9520, 5537, 5135,
                    ],
                ),
                236,
            ),
            (
                ([5, 5], [5, 2], &[7, 1, 3, 3, 5, 3, 22, 10, 23], &[5, 5, 6, 2, 0, 16]),
                8,
            ),
        ];

        for ((start_pos, home_pos, row_costs, col_costs), expected) in test_cases {
            assert_eq!(
                S::min_cost(
                    start_pos.to_vec(),
                    home_pos.to_vec(),
                    row_costs.to_vec(),
                    col_costs.to_vec()
                ),
                expected,
            );
        }
    }
}
