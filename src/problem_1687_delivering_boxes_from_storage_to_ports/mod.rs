pub mod dynamic_programming_and_sliding_window;

pub trait Solution {
    fn box_delivering(boxes: Vec<Vec<i32>>, ports_count: i32, max_boxes: i32, max_weight: i32) -> i32;
}

#[cfg(test)]
mod tests {
    use super::Solution;

    type TestCase = ((&'static [[i32; 2]], i32, i32, i32), i32);

    const LONG_TEST_CASE_1: TestCase = (
        (
            &[
                [61, 4840],
                [66, 16490],
                [54, 15479],
                [48, 5555],
                [25, 3120],
                [47, 1010],
                [30, 3236],
                [7, 9270],
                [55, 14900],
                [48, 11603],
                [104, 12299],
                [3, 8266],
                [3, 1440],
                [15, 5659],
                [72, 13285],
                [32, 10642],
                [26, 5780],
                [88, 15220],
                [16, 3808],
                [27, 11203],
                [41, 7645],
                [79, 10232],
                [73, 403],
                [86, 11181],
                [25, 5789],
                [12, 15415],
                [59, 2075],
                [60, 11185],
                [39, 2213],
                [103, 12049],
                [99, 9585],
                [40, 16489],
                [71, 3282],
                [47, 10552],
                [10, 11910],
                [86, 7606],
                [6, 654],
                [30, 14945],
                [14, 3796],
                [22, 5430],
                [10, 13458],
                [74, 2169],
                [81, 10010],
                [92, 6330],
                [104, 778],
                [100, 3311],
                [98, 5975],
                [56, 15520],
                [13, 11700],
                [19, 6890],
                [99, 2910],
                [62, 1393],
                [48, 5638],
                [9, 10967],
                [38, 945],
                [23, 14549],
                [43, 4081],
                [42, 4540],
                [82, 5832],
                [69, 5072],
                [19, 15047],
                [85, 4330],
                [57, 3549],
                [32, 6955],
                [46, 15456],
                [80, 1358],
                [58, 25],
                [95, 9401],
                [10, 15268],
                [32, 12504],
                [10, 4724],
                [83, 4816],
                [45, 2084],
                [33, 7725],
                [32, 3637],
                [103, 7506],
                [103, 51],
                [69, 6945],
                [42, 4017],
                [66, 5596],
                [83, 305],
                [56, 10441],
                [70, 3892],
                [78, 2290],
                [50, 6269],
                [23, 14932],
                [17, 11895],
                [43, 3679],
                [39, 3086],
                [43, 16224],
                [12, 13993],
                [92, 14876],
                [6, 1219],
                [65, 8544],
                [25, 658],
                [79, 5722],
                [19, 14103],
                [80, 16496],
                [56, 8778],
                [44, 4481],
                [36, 14814],
                [77, 2370],
                [2, 7206],
                [100, 1700],
                [24, 1636],
                [36, 8805],
                [46, 7068],
                [7, 13167],
                [45, 8375],
                [63, 9633],
                [83, 8546],
                [13, 15183],
                [73, 14140],
                [12, 1395],
                [101, 2581],
                [2, 5718],
                [16, 2783],
                [34, 9200],
                [42, 10048],
                [74, 1353],
                [74, 2485],
                [33, 4091],
                [21, 9159],
                [79, 10195],
                [1, 9576],
                [63, 11647],
                [104, 5794],
                [103, 2786],
                [46, 121],
                [23, 5173],
                [35, 7066],
                [13, 12041],
                [51, 9573],
                [56, 2992],
                [81, 4133],
                [58, 9161],
                [27, 9496],
                [86, 4972],
                [33, 11241],
                [88, 11329],
                [69, 3844],
                [47, 1487],
                [94, 15931],
                [48, 11569],
                [15, 2003],
                [26, 11104],
                [33, 6961],
                [6, 15453],
                [2, 11193],
                [14, 3942],
                [94, 10791],
                [71, 1871],
                [98, 13280],
                [73, 8641],
                [21, 9413],
                [22, 12239],
                [38, 14552],
                [92, 14876],
                [43, 4579],
                [21, 12583],
                [67, 13959],
                [71, 9938],
            ],
            106,
            74,
            16517,
        ),
        261,
    );

    const LONG_TEST_CASE_2: TestCase = (
        (
            &[
                [41, 32035],
                [29, 34006],
                [15, 42248],
                [53, 13630],
                [3, 20604],
                [32, 33913],
                [23, 13746],
                [18, 3381],
                [45, 36702],
                [8, 21918],
                [25, 36179],
                [47, 14627],
                [62, 20196],
                [33, 39697],
                [17, 34359],
                [57, 21025],
                [64, 41254],
                [13, 22044],
                [25, 28742],
                [41, 41954],
                [60, 35831],
                [12, 26238],
                [25, 23371],
                [11, 21530],
                [13, 19199],
                [41, 17932],
                [26, 157],
                [64, 29116],
                [21, 12712],
                [63, 9896],
                [16, 34518],
                [16, 27712],
                [20, 12378],
                [61, 26493],
                [50, 4096],
                [48, 9011],
                [40, 23808],
                [19, 23150],
                [48, 25008],
                [33, 29110],
                [53, 5249],
                [63, 39008],
                [22, 35072],
                [5, 31169],
                [51, 36734],
                [55, 11071],
                [15, 40951],
                [41, 20257],
                [31, 28269],
                [14, 3082],
                [13, 10463],
                [41, 3155],
                [5, 30180],
                [31, 31882],
                [34, 30540],
                [61, 39097],
                [11, 10032],
                [21, 24292],
                [43, 8274],
                [5, 28860],
                [56, 20796],
                [21, 20034],
                [33, 1237],
                [52, 20025],
                [46, 16709],
                [25, 19108],
                [8, 40137],
                [40, 14829],
                [22, 7822],
                [21, 6929],
                [19, 34635],
                [46, 15905],
                [54, 28074],
                [23, 26664],
                [19, 28443],
                [14, 39560],
                [28, 12822],
                [5, 9500],
                [48, 8373],
                [55, 24406],
                [40, 9545],
                [62, 27397],
                [22, 34104],
                [61, 3624],
                [46, 8625],
                [37, 20146],
                [55, 36014],
                [55, 1938],
                [11, 24402],
                [30, 33373],
                [41, 16064],
                [17, 15289],
                [56, 40892],
                [45, 29712],
                [5, 21702],
                [20, 3514],
                [10, 18538],
                [24, 40944],
                [52, 28731],
                [39, 25767],
                [36, 33060],
                [30, 41143],
                [64, 26036],
                [21, 13367],
                [50, 11461],
                [31, 19809],
                [23, 5297],
                [59, 4961],
                [2, 32102],
                [63, 2371],
                [19, 8303],
                [30, 7868],
                [47, 31854],
                [29, 31075],
                [49, 3526],
                [64, 36208],
                [36, 16094],
                [15, 41030],
                [5, 22859],
                [3, 40429],
                [28, 40921],
                [54, 28316],
                [10, 42363],
                [60, 17030],
                [34, 22504],
                [41, 9861],
                [37, 8482],
                [25, 28443],
                [57, 29191],
                [22, 18029],
                [7, 9205],
                [60, 11252],
                [25, 4977],
                [26, 15914],
                [12, 31683],
                [46, 6366],
                [7, 20352],
                [6, 29863],
                [34, 42117],
                [26, 33120],
                [17, 4093],
                [23, 22773],
                [48, 24952],
                [51, 15682],
                [4, 32309],
                [59, 33376],
                [18, 4569],
                [46, 39629],
                [46, 27230],
                [32, 5575],
                [6, 22851],
                [48, 16756],
                [30, 19709],
                [59, 22383],
                [61, 3341],
                [15, 12537],
                [55, 15353],
                [37, 14092],
                [62, 14941],
                [24, 41854],
                [52, 28405],
                [21, 42453],
                [54, 26428],
                [41, 42233],
                [43, 19581],
                [36, 9092],
                [58, 23918],
                [5, 14502],
                [43, 5019],
                [57, 33060],
                [9, 10455],
                [31, 2739],
                [48, 28798],
                [44, 35986],
                [51, 8349],
                [9, 12200],
                [59, 32558],
                [21, 31706],
                [6, 25461],
                [46, 31870],
                [2, 9295],
                [9, 31041],
                [22, 4077],
                [37, 33710],
                [33, 1692],
                [53, 3108],
                [17, 14890],
                [15, 8117],
                [42, 24098],
                [53, 11705],
                [60, 16063],
                [23, 37971],
                [17, 22867],
                [52, 37307],
                [8, 6159],
                [36, 22964],
                [21, 29201],
                [1, 31773],
                [16, 18925],
                [53, 38446],
                [13, 34408],
                [41, 21044],
                [60, 5070],
                [44, 2338],
                [37, 10063],
                [44, 34120],
                [64, 6219],
                [55, 35739],
                [14, 21291],
                [49, 30379],
                [46, 24644],
                [55, 5697],
                [13, 40779],
                [7, 4414],
                [31, 14276],
                [48, 37542],
                [63, 30721],
                [22, 29283],
                [55, 1029],
                [33, 26423],
                [54, 7599],
                [21, 20907],
                [10, 27573],
                [20, 32844],
                [28, 4381],
                [34, 41430],
                [14, 9185],
                [21, 21529],
                [7, 3059],
                [53, 35956],
                [26, 39193],
                [3, 2751],
                [42, 27228],
                [55, 13700],
                [30, 39442],
                [16, 22931],
                [5, 8151],
                [38, 33462],
                [16, 12890],
                [23, 9595],
                [1, 7117],
                [23, 24916],
                [44, 16566],
                [33, 28672],
                [60, 39522],
                [13, 4275],
                [44, 12623],
                [42, 23346],
                [31, 32080],
                [34, 3772],
                [13, 14584],
                [10, 29236],
                [55, 13517],
                [15, 11427],
                [27, 11894],
                [17, 22558],
                [21, 14983],
                [42, 15553],
                [2, 32324],
            ],
            64,
            125,
            42502,
        ),
        431,
    );

    pub fn run<S: Solution>() {
        let test_cases = [
            ((&[[1, 1], [2, 1], [1, 1]] as &[_], 2, 3, 3), 4),
            ((&[[1, 2], [3, 3], [3, 1], [3, 1], [2, 4]], 3, 3, 6), 6),
            ((&[[1, 4], [1, 2], [2, 1], [2, 1], [3, 2], [3, 4]], 3, 6, 7), 6),
            ((&[[1, 1], [1, 1], [2, 1]], 2, 2, 2), 4),
            LONG_TEST_CASE_1,
            LONG_TEST_CASE_2,
        ];

        for ((boxes, ports_count, max_boxes, max_weight), expected) in test_cases {
            assert_eq!(
                S::box_delivering(
                    boxes.iter().map(Vec::from).collect(),
                    ports_count,
                    max_boxes,
                    max_weight,
                ),
                expected,
            );
        }
    }
}
